{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","monsters","searchField","fetch","then","response","json","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAER,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,YCNdC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACMD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCF7CK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOX,UAAU,SAASY,KAAK,SACxBF,YAAaA,EACbG,SAAUF,MC+BNG,G,wDA7BX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTC,SAAU,GACVC,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKE,SAAU,CAAEN,SAAUI,S,oBAGrD,WAAU,IAAD,OACL,EAAkCG,KAAKR,MAA/BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZO,EAAmBR,EACpBS,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASV,EAAYS,kBAC3E,OACI,sBAAK1B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CAAWU,YAAY,iBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEL,YAAaW,EAAEC,OAAOC,WACpE,cAAC,EAAD,CAAU3B,QAASqB,W,GAzBbO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d88ac680.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        <img alt=\"monster\"\n             src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        />\n        <h2>{ props.monster.name}</h2>\n        <p>{ props.monster.email }</p>\n    </div>\n)\n","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card'\nexport const CardList = props => (\n    <div className=\"card-list\">\n        { props.monster.map(monster => <Card key={monster.id} monster={monster} />)}\n    </div>\n)\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange}) => (\n    <input className=\"search\" type=\"search\"\n           placeholder={placeholder}\n           onChange={handleChange} />\n)\n","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list'\nimport { SearchBox } from './components/search-box/search-box'\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(response => this.setState( { monsters: response }))\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters\n            .filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n        <div className=\"App\">\n            <h1>Monster Rolodex</h1>\n            <SearchBox placeholder=\"search monster\"\n                       handleChange={e => this.setState({ searchField: e.target.value})} />\n            <CardList monster={filteredMonsters} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}